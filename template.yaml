AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: 'ModelGuard MVP - Core Artifact Management API'

Globals:
  Function:
    Runtime: python3.12
    Timeout: 15
    MemorySize: 128
    Environment:
      Variables:
        LOG_LEVEL: INFO  # Change to DEBUG for verbose logging
        PYTHONPATH: /var/task:/var/task/src
        ARTIFACTS_TABLE: !Ref ArtifactsTable
        ARTIFACTS_BUCKET: !Ref ArtifactsBucket
    Tracing: Active

Resources:
  # DynamoDB Table - Model Metadata
  ArtifactsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: ModelGuard-Artifacts-Metadata
      BillingMode: PAY_PER_REQUEST  # On-demand pricing
      AttributeDefinitions:
        - AttributeName: artifact_id
          AttributeType: S
      KeySchema:
        - AttributeName: artifact_id
          KeyType: HASH  # Primary key
      Tags:
        - Key: Project
          Value: ModelGuard

  # S3 Bucket - Model/Code/Dataset Storage
  ArtifactsBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub 'modelguard-artifacts-files'
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      Tags:
        - Key: Project
          Value: ModelGuard

  # API Gateway
  ModelGuardApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: dev
      Description: ModelGuard MVP API
      Cors:
        AllowMethods: "'GET,POST,PUT,DELETE,OPTIONS'"
        AllowHeaders: "'Content-Type,X-Authorization'"
        AllowOrigin: "'*'"

  # POST /artifacts - Enumerate artifacts
  PostArtifactsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./
      Handler: lambdas.post_artifacts.lambda_handler
      Description: Enumerate/List artifacts from registry
      Role: arn:aws:iam::378950442938:role/BasicLambdaRole
      Events:
        ListArtifacts:
          Type: Api
          Properties:
            RestApiId: !Ref ModelGuardApi
            Path: /artifacts
            Method: POST

  # POST /artifact/{artifact_type} - Upload artifact
  PostArtifactUploadFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./
      Handler: lambdas.post_artifact_upload.lambda_handler
      Description: Upload/Create new artifact
      Role: arn:aws:iam::378950442938:role/BasicLambdaRole
      Events:
        CreateArtifact:
          Type: Api
          Properties:
            RestApiId: !Ref ModelGuardApi
            Path: /artifact/{artifact_type}
            Method: POST

  # GET /artifacts/{artifact_type}/{id} - Download artifact
  GetArtifactDownloadFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./
      Handler: lambdas.get_artifact_download.lambda_handler
      Description: Download/Retrieve artifact by type and ID
      Role: arn:aws:iam::378950442938:role/BasicLambdaRole
      Events:
        GetArtifact:
          Type: Api
          Properties:
            RestApiId: !Ref ModelGuardApi
            Path: /artifacts/{artifact_type}/{id}
            Method: GET

  # PUT /artifacts/{artifact_type}/{id} - Update artifact
  PutArtifactUpdateFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./
      Handler: lambdas.put_artifact_update.lambda_handler
      Description: Update existing artifact
      Role: arn:aws:iam::378950442938:role/BasicLambdaRole
      Events:
        UpdateArtifact:
          Type: Api
          Properties:
            RestApiId: !Ref ModelGuardApi
            Path: /artifacts/{artifact_type}/{id}
            Method: PUT

  # GET /artifact/byName/{name} - Search by name
  GetSearchByNameFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./
      Handler: lambdas.get_search_by_name.lambda_handler
      Description: Search artifacts by name
      Role: arn:aws:iam::378950442938:role/BasicLambdaRole
      Events:
        SearchByName:
          Type: Api
          Properties:
            RestApiId: !Ref ModelGuardApi
            Path: /artifact/byName/{name}
            Method: GET

  # POST /artifact/byRegEx - Search by regex
  PostSearchByRegexFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./
      Handler: lambdas.post_search_by_regex.lambda_handler
      Description: Search artifacts using regular expressions
      Role: arn:aws:iam::378950442938:role/BasicLambdaRole
      Events:
        SearchByRegex:
          Type: Api
          Properties:
            RestApiId: !Ref ModelGuardApi
            Path: /artifact/byRegEx
            Method: POST

  # GET /artifact/model/{id}/rate - Rate model
  GetModelRateFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./
      Handler: lambdas.get_model_rate.lambda_handler
      Description: Get ratings for model artifacts
      Role: arn:aws:iam::378950442938:role/BasicLambdaRole
      Events:
        ModelRate:
          Type: Api
          Properties:
            RestApiId: !Ref ModelGuardApi
            Path: /artifact/model/{id}/rate
            Method: GET

  # Web Interface
  WebUIFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: web.app.handler
      Runtime: python3.12
      CodeUri: .
      Timeout: 10
      MemorySize: 256
      Role: arn:aws:iam::378950442938:role/BasicLambdaRole
      Environment:
        Variables:
          API_BASE: "https://${ModelGuardApi}.execute-api.${AWS::Region}.amazonaws.com/dev/"
      Events:
        Root:
          Type: Api
          Properties:
            Path: /
            Method: ANY
        Web:
          Type: Api
          Properties:
            Path: /{proxy+}
            Method: ANY

Outputs:
  ModelGuardApiUrl:
    Description: API Gateway endpoint URL for testing
    Value: !Sub 'https://${ModelGuardApi}.execute-api.${AWS::Region}.amazonaws.com/dev/'
    Export:
      Name: !Sub '${AWS::StackName}-ApiUrl'

  ArtifactsTableName:
    Description: DynamoDB table for model metadata
    Value: !Ref ArtifactsTable
    Export:
      Name: !Sub '${AWS::StackName}-TableName'

  ArtifactsBucketName:
    Description: S3 bucket for model/code/dataset storage
    Value: !Ref ArtifactsBucket
    Export:
      Name: !Sub '${AWS::StackName}-BucketName'
